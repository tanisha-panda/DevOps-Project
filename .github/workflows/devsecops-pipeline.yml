name: DevSecOps CI/CD

on:
  push:
    branches:
      - main

jobs:
  validate-terraform:
    runs-on: ubuntu-latest
    name: Terraform Validation & tfsec
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Format
        run: terraform -chdir=terraform fmt -check

      - name: Terraform Validate
        run: terraform -chdir=terraform validate

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working-directory: ./terraform

  docker-security:
    name: Docker Build & Trivy Scan
    runs-on: ubuntu-latest
    needs: validate-terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t myapp:latest ./docker

      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb stable main | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Scan image with Trivy
        run: trivy image --exit-code 0 --severity CRITICAL,HIGH myapp:latest

  deploy-kubernetes:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: docker-security
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.29.0

      - name: Configure Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > ~/.kube/config

      - name: Apply Sealed Secret
        run: kubectl apply -f k8s/secrets/sealed-secret.yaml

      - name: Deploy app
        run: kubectl apply -f k8s/manifests/
